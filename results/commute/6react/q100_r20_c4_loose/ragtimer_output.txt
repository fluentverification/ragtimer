admin.sh
artifact.sh
bin
classes
depgraph.py
genbash.py
ignore.txt
main.py
Makefile
prefixes.py
prefix_parser.py
__pycache__
reaction_list.txt
reactions_mod.py
reactions_v5.py
run_lots.sh
src
testprint.txt
test.sh
test_subp.py
test_v2
test_v2.cpp
test_v2.dsc
test_v2.h
test_v2.ivy
test_v2.txt
test_v3
test_v3.cpp
test_v3.dsc
test_v3.h
test_v3.ivy
trace_list.txt
two.sh

================================================================================
Welcome to RAGTIMER for trace generation.
This is a work in progress. Please submit bug reports.
================================================================================

Constructing a dependency graph
Finished constructing a dependency graph, found these prefixes:
r4 
r6 r4 

/home/landonjefftaylor/combined_ragtimer/_ragtimer
Finding 100
For each prefix: 100
--------------------------------------------------
Testing Prefix r4 r6 r4 
--------------------------------------------------
starting to run initial test
finished initial test
The iters recorded for this initial example is 816
Running test for 100 simulation runs in group 1 of 1
finished randomized testing

The traces recorded and the information on those traces are stored in 'reaction_list.txt'

The traces by themselves (i.e. for simulation and commuting) are found in 'trace_list.txt'

================================================================================
Total Sum of Unique Path Probabilities: 0.0
================================================================================




(javac -classpath "/usr/local/bin/prism/classes:/usr/local/bin/prism/lib/*:/usr/local/bin/prism/prism/classes:/usr/local/bin/prism/prism/lib/*" -d classes src/./BuildModel.java)
PRISM_DIR=/usr/local/bin/prism PRISM_MAINCLASS=simulate.BuildModel bin/run
Welcome to the model commutation tool.
Getting Parameters from input file
Model Name: ../model.sm
Trace List Name: ../commute_traces.txt
Property: s5=25
Max Depth: 20
Time Bound: 100000.0
Terminating with depth bound
Cycle length: 4
Cycle initial values for testing: 8
Verbose mode disabled
Prism model and property loaded succesfully.
Iterating through each input trace.
Expect this to run silently for a moment.
Processed 25 paths with a state count of 100
Processed 50 paths with a state count of 100
Processed 75 paths with a state count of 100
Processed 100 paths with a state count of 100
Processed 100 paths with a state count of 100
State graph built. Appending cycles where allowable.
Added 0 cycles, with 0 new states and 0 transitions.
Removed 1 dead-end states and 0 probability sink states (total 1 states).
Removed 2 corresponding transitions.

Final Count:
99 states
251 transitions

Establishing an absorbing state.
Begin printing model files.
Now printing 100 paths to PRISM model files.
Now printing 100 paths to STORM model files.
---------------------------------------
BEGIN ERROR CHECKING
If an inconsistency is found in the state space, its details will be provided here.
Otherwise, assume the generated state-space is error-free.
This is an added confidence booster for the probability results.

END ERROR CHECKING
---------------------------------------
Finished! Processed 100 paths.
Max Memory: 175262416 bytes
Max Memory: 175262 KB
Max Memory: 175 MB
Max Memory: 0 GB
Welcome to RAGTIMER. At present, this is two tools joined together. We are working on joining them together more seamlessly but appreciate your patience with this prototype tool.
I will generate traces, then commute.
I am assuming you have placed your model in the following files:
model.ragtimer (in the RAGTIMER format; see README)
model.prop (file with property without time constraints in first line, i.e., x=10 )
model.sm (prism model file)
model.csl (prism csl property)

_commute/options.txt
Running RAGTIMER trace generation
/home/landonjefftaylor/combined_ragtimer/_ragtimer
Starting Commuting
Look for output files _commute/prism.* or _commute/storm.*
You can use these files in your favorite model checker.
