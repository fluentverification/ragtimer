admin.sh
artifact.sh
bin
classes
depgraph.py
genbash.py
ignore.txt
main.py
Makefile
prefixes.py
prefix_parser.py
__pycache__
reaction_list.txt
reactions_mod.py
reactions_v5.py
run_lots.sh
src
testprint.txt
test.sh
test_subp.py
test_v2
test_v2.cpp
test_v2.dsc
test_v2.h
test_v2.ivy
test_v2.txt
test_v3
test_v3.cpp
test_v3.dsc
test_v3.h
test_v3.ivy
trace_list.txt
two.sh

================================================================================
Welcome to RAGTIMER for trace generation.
This is a work in progress. Please submit bug reports.
================================================================================

Constructing a dependency graph
Finished constructing a dependency graph, found these prefixes:
r1 

/home/landonjefftaylor/combined_ragtimer/_ragtimer
Finding 100
For each prefix: 100
--------------------------------------------------
Testing Prefix r1 
--------------------------------------------------
starting to run initial test
finished initial test
The iters recorded for this initial example is 68
Running test for 100 simulation runs in group 1 of 1
finished randomized testing
Run 1 did not reach the target state

Run 2 did not reach the target state

Run 3 did not reach the target state

Run 4 did not reach the target state

Run 6 did not reach the target state

Run 8 did not reach the target state

Run 9 did not reach the target state

Run 10 did not reach the target state

Run 11 did not reach the target state

Run 12 did not reach the target state

Run 14 did not reach the target state

Run 15 did not reach the target state

Run 17 did not reach the target state

Run 18 did not reach the target state

Run 19 did not reach the target state

Run 22 did not reach the target state

Run 23 did not reach the target state

Run 25 did not reach the target state

Run 28 did not reach the target state

Run 29 did not reach the target state

Run 30 did not reach the target state

Run 31 did not reach the target state

Run 34 did not reach the target state

Run 36 did not reach the target state

Run 38 did not reach the target state

Run 39 did not reach the target state

Run 40 did not reach the target state

Run 41 did not reach the target state

Run 42 did not reach the target state

Run 43 did not reach the target state

Run 44 did not reach the target state

Run 46 did not reach the target state

Run 47 did not reach the target state

Run 49 did not reach the target state

Run 50 did not reach the target state

Run 51 did not reach the target state

Run 52 did not reach the target state

Run 53 did not reach the target state

Run 54 did not reach the target state

Run 56 did not reach the target state

Run 59 did not reach the target state

Run 60 did not reach the target state

Run 61 did not reach the target state

Run 62 did not reach the target state

Run 63 did not reach the target state

Run 64 did not reach the target state

Run 65 did not reach the target state

Run 67 did not reach the target state

Run 68 did not reach the target state

Run 70 did not reach the target state

Run 72 did not reach the target state

Run 73 did not reach the target state

Run 75 did not reach the target state

Run 76 did not reach the target state

Run 81 did not reach the target state

Run 82 did not reach the target state

Run 83 did not reach the target state

Run 84 did not reach the target state

Run 85 did not reach the target state

Run 86 did not reach the target state

Run 88 did not reach the target state

Run 91 did not reach the target state

Run 93 did not reach the target state

Run 95 did not reach the target state

Run 97 did not reach the target state

Run 100 did not reach the target state


The traces recorded and the information on those traces are stored in 'reaction_list.txt'

The traces by themselves (i.e. for simulation and commuting) are found in 'trace_list.txt'

================================================================================
Total Sum of Unique Path Probabilities: 0.0
================================================================================




(javac -classpath "/usr/local/bin/prism/classes:/usr/local/bin/prism/lib/*:/usr/local/bin/prism/prism/classes:/usr/local/bin/prism/prism/lib/*" -d classes src/./BuildModel.java)
PRISM_DIR=/usr/local/bin/prism PRISM_MAINCLASS=simulate.BuildModel bin/run
Welcome to the model commutation tool.
Getting Parameters from input file
Model Name: ../model.sm
Trace List Name: ../commute_traces.txt
Property: s2>=80
Max Depth: 20
Time Bound: 100000.0
Terminating with depth bound
Cycle length: 4
Cycle initial values for testing: 8
Verbose mode disabled
Prism model and property loaded succesfully.
Iterating through each input trace.
Expect this to run silently for a moment.
Processed 25 paths with a state count of 83
Processed 50 paths with a state count of 83
Processed 75 paths with a state count of 83
Processed 100 paths with a state count of 83
Processed 100 paths with a state count of 83
State graph built. Appending cycles where allowable.
Added 83 cycles, with 2 new states and 6 transitions.
Removed 0 dead-end states and 0 probability sink states (total 0 states).
Removed 0 corresponding transitions.

Final Count:
85 states
168 transitions

Establishing an absorbing state.
Begin printing model files.
Now printing 100 paths to PRISM model files.
Now printing 100 paths to STORM model files.
---------------------------------------
BEGIN ERROR CHECKING
If an inconsistency is found in the state space, its details will be provided here.
Otherwise, assume the generated state-space is error-free.
This is an added confidence booster for the probability results.

END ERROR CHECKING
---------------------------------------
Finished! Processed 100 paths.
Max Memory: 105586688 bytes
Max Memory: 105586 KB
Max Memory: 105 MB
Max Memory: 0 GB
Welcome to RAGTIMER. At present, this is two tools joined together. We are working on joining them together more seamlessly but appreciate your patience with this prototype tool.
I will generate traces, then commute.
I am assuming you have placed your model in the following files:
model.ragtimer (in the RAGTIMER format; see README)
model.prop (file with property without time constraints in first line, i.e., x=10 )
model.sm (prism model file)
model.csl (prism csl property)

_commute/options.txt
Running RAGTIMER trace generation
/home/landonjefftaylor/combined_ragtimer/_ragtimer
Starting Commuting
Look for output files _commute/prism.* or _commute/storm.*
You can use these files in your favorite model checker.
